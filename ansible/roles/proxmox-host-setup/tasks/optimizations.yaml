- name: Install required packages for monitoring and CPU microcode updates
  ansible.builtin.apt:
    name:
      - lm-sensors
      - intel-microcode
      - powertop
      - linux-cpupower
    state: present

- name: Set CPU scaling governor to powersave
  ansible.builtin.shell: |
    for cpu in /sys/devices/system/cpu/cpu[0-9]*; do
      echo powersave > "$cpu/cpufreq/scaling_governor"
    done
  args:
    executable: /bin/bash
  become: true

- name: Set limits for zfs ARC (1,5 GB or 1536 MB - which is 1536*1024*1024 bytes) - zfs_arc_min needs to be 1 less than zfs_arc_max
  ansible.builtin.copy:
    dest: /etc/modprobe.d/zfs.conf
    content: |
      options zfs zfs_arc_max=1610612735
      options zfs zfs_arc_min=1610612736
  when: zfs

- name: Set ZFS sync disabled (for performance, this will amount to loss of data in case of power failure of up to 5 seconds but I can live with that)
  command: zfs set sync=disabled rpool
  when: zfs

- name: Check if /etc/default/grub contains command line parameters for CPU optimizations and enable if missing
  ansible.builtin.lineinfile:
    path: /etc/default/grub
    regexp: '^GRUB_CMDLINE_LINUX_DEFAULT="((?:(?!mitigations=off transparent_hugepage=always).)*?)"$'
    line: 'GRUB_CMDLINE_LINUX_DEFAULT="\1 mitigations=off transparent_hugepage=always"'
    backup: true
    backrefs: true
  when: zfs | default(true) | bool == false

- name: Check if /etc/kernel/cmdline contains command line parameters for CPU optimizations and enable if missing
  ansible.builtin.lineinfile:
    path: /etc/kernel/cmdline
    regexp: '^(.*?)(mitigations=off transparent_hugepage=always|$)'
    line: '\1 mitigations=off transparent_hugepage=always'
    backup: true
    backrefs: true
  when: zfs
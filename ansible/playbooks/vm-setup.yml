## TO DO: Add SSH keys from the VM to known_hosts

- name: Do first time Ubuntu setup
  hosts: vm
  gather_facts: true
  become: true
  roles:
    - role: ../roles/ubuntu-vm-first-setup
    - role: ../roles/certbot-renewal
    - role: ../roles/portainerserver-install
      when: portainer_server
    - role: ../roles/portaineragent-install
      when: portainer_agent

- name: Configure VM settings on proxmox host to passthrough GPU
  hosts: proxmox
  gather_facts: false
  tasks:
    - name: Set Display to none for a VM with passthrough GPU (only perform this command on the node of the vm AND if the VM has enable_gpu)
      ansible.builtin.command: "qm set {{ hostvars[item]['vm_id'] }} --vga type=none"
      loop: "{{ groups['vm'] }}"
      when: hostvars[item]['proxmox_node'] + '.local.timo.be' == inventory_hostname and hostvars[item]['enable_gpu'] | default(false) | bool

    - name: Passthrough GPU using the hostpci_gpu_id (only perform this command on the node of the vm AND if the VM has enable_gpu)
      ansible.builtin.command: "qm set {{ hostvars[item]['vm_id'] }} --hostpci0 host={{ hostvars[item]['hostpci_gpu_id'] }},pcie=1,rombar=1"
      loop: "{{ groups['vm'] }}"
      when: hostvars[item]['proxmox_node'] + '.local.timo.be' == inventory_hostname and hostvars[item]['enable_gpu'] | default(false) | bool
    
    - name: Restart VM to apply GPU settings
      delegate_to: localhost
      community.general.proxmox_kvm:
        api_user: "{{ proxmox_api_user }}"
        api_token_id: "{{ proxmox_api_tokenid }}"
        api_token_secret: "{{ proxmox_api_tokensecret }}"
        api_host: "{{ proxmox_api_host }}"
        node: "{{ proxmox_node | default('proxmox') }}"

        vmid: "{{ hostvars[item]['vm_id'] }}"
        state: restarted
      loop: "{{ groups['vm'] }}"
      when: hostvars[item]['proxmox_node'] + '.local.timo.be' == inventory_hostname and hostvars[item]['enable_gpu'] | default(false) | bool


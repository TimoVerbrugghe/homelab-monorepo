## This playbook sets up proxmox hosts to passthrough iGPU, install ubuntu cloudinit templates & uses terraform to deploy vms based on these templates
## This playbook will deploy 2 types of VMs: iGPU VM (where there are additional steps taken to install intel drivers and passthrough the iGPU) and "standard" VMs

- name: Prepare env on localhost
  hosts: localhost
  gather_facts: true
  roles:
    - role: ../roles/hostprereq

- name: Add Proxmox Public SSH Keys to local system so there is no interrupt on host verification
  ansible.builtin.import_playbook: install-ssh-keys.yaml

- name: Configure Proxmox Hosts for GPU passthrough & Create Ubuntu Cloud Init Template
  hosts: proxmox
  roles:
    - role: ../roles/proxmox-host-setup

- name: VM deployment using terraform
  hosts: localhost
  tasks:
    - name: Deploy VMs
      community.general.terraform:
        project_path: ../../terraform/environments/cloudinit-prod/
        state: present
        force_init: true
        variables_files:
          - ./cloudinit-prod.tfvars
          - ../proxmox.tfvars

- name: Wait 30 seconds to make sure that all cloudinit functions have been executed & VMs are fully booted
  hosts: localhost
  tasks:
    - name: Wait for 30 seconds to make sure VMs have fully booted
      ansible.builtin.pause:
        seconds: 30

- name: Update known hosts with VM ssh keys
  vars:
    host_group: k3scluster
  import_playbook: ./update-known-hosts.yaml

- name: Do first time Ubuntu setup
  hosts: vm
  gather_facts: true
  become: true
  roles:
    - role: ../roles/ubuntu-vm-first-setup
    - role: ../roles/certbot-renewal
    - role: ../roles/portainerserver-install
      when: portainer_server
    - role: ../roles/portaineragent-install
      when: portainer_agent

- name: Configure VM settings on proxmox host to passthrough GPU
  hosts: proxmox
  gather_facts: false
  tasks:
    - name: Set Display to none for a VM with passthrough GPU (only perform this command on the node of the vm AND if the VM has enable_gpu)
      ansible.builtin.command: "qm set {{ hostvars[item]['vm_id'] }} --vga type=none"
      loop: "{{ groups['vm'] }}"
      when: hostvars[item]['proxmox_node'] + '.local.timo.be' == inventory_hostname and hostvars[item]['enable_gpu'] | default(false) | bool

    - name: Passthrough GPU using the hostpci_gpu_id (only perform this command on the node of the vm AND if the VM has enable_gpu)
      ansible.builtin.command: "qm set {{ hostvars[item]['vm_id'] }} --hostpci0 host={{ hostvars[item]['hostpci_gpu_id'] }},pcie=1,rombar=1"
      loop: "{{ groups['vm'] }}"
      when: hostvars[item]['proxmox_node'] + '.local.timo.be' == inventory_hostname and hostvars[item]['enable_gpu'] | default(false) | bool
    
    - name: Restart VM to apply GPU settings
      delegate_to: localhost
      community.general.proxmox_kvm:
        api_user: "{{ proxmox_api_user }}"
        api_token_id: "{{ proxmox_api_tokenid }}"
        api_token_secret: "{{ proxmox_api_tokensecret }}"
        api_host: "{{ proxmox_api_host }}"
        node: "{{ proxmox_node | default('proxmox') }}"

        vmid: "{{ hostvars[item]['vm_id'] }}"
        state: restarted
      loop: "{{ groups['vm'] }}"
      when: hostvars[item]['proxmox_node'] + '.local.timo.be' == inventory_hostname and hostvars[item]['enable_gpu'] | default(false) | bool

- name: Prompt user to go to Portainer Server site for configuration
  hosts: localhost
  tasks:
    - ansible.builtin.pause:
        prompt: "Portainer server has been deployed on igpuvm VM. Please go to https://{{ hostvars[item].inventory_hostname }}:9443 to configure. Press enter to continue."
      with_items:  "{{ groups['igpuvm'] }}"

- name: Prompt user to add Portainer Agent to configuration
  hosts: localhost
  tasks:
    - ansible.builtin.pause:
        prompt: "Portainer Agent has been deployed on other vms. Please add {{ hostvars[item].inventory_hostname }}:9001 as an additional environment to portainer server installation. Press enter to continue."
      with_items:  "{{ groups['othervms'] }}"
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: longhorn-jellyfin-config-pvc
  namespace: media
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: longhorn
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jellyfin
  namespace: media
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jellyfin
  template:
    metadata:
      labels:
        app: jellyfin
    spec:
      containers:
      - name: jellyfin
        image: jellyfin/jellyfin
        env:
        - name: TZ
          value: Europe/Brussels
        ports:
        - containerPort: 8096
          protocol: TCP
        - containerPort: 1900
          protocol: UDP
        - containerPort: 7359
          protocol: UDP
        volumeMounts:
        - name: config
          mountPath: /config
        - name: cache
          mountPath: /cache
        - name: movies
          mountPath: /movies
        - name: tvshows
          mountPath: /tv
        - name: devshm
          mountPath: /dev/shm
        - name: devdri
          mountPath: /dev/dri
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: longhorn-jellyfin-config-pvc
      - name: cache
        hostPath:
          path: /tmp
      - name: movies
        persistentVolumeClaim:
          claimName: nfs-movies-pvc
      - name: tvshows
        persistentVolumeClaim:
          claimName: nfs-tvshows-pvc
      # - name: devshm
      #   hostPath:
      #     path: /dev/shm
      # - name: devdri
      #   hostPath:
      #     path: /dev/dri
---
# Service to expose local discovery ports and also so that traefik can pick up and expose jellyfin service
apiVersion: v1
kind: Service
metadata:
  name: jellyfin-service
  namespace: media
spec:
  selector:
    app: jellyfin
  ports:
  - protocol: TCP
    port: 8096
    targetPort: 8096
    name: http
  - protocol: UDP
    port: 1900
    targetPort: 1900
    name: discovery
  - protocol: UDP
    port: 7359
    targetPort: 7359
    name: discovery2
  type: LoadBalancer
  loadBalancerIP: 10.10.10.36  # Provide an IP address for kube-vip to use
  externalTrafficPolicy: Local
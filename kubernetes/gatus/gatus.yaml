apiVersion: apps/v1
kind: Deployment
metadata:
  name: gatus
  namespace: gatus
  labels:
    app.kubernetes.io/name: gatus
  annotations:
    keel.sh/policy: all
    keel.sh/trigger: poll
    keel.sh/pollSchedule: "@every 24h"
spec:
  # Cannot do more replicas since otherwise Gatus will send multiple alerts for the same failure (each pod will send an alert)
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: gatus
  template:
    metadata:
      labels:
        app.kubernetes.io/name: gatus
    spec:
      serviceAccountName: gatus
      terminationGracePeriodSeconds: 5
      containers:
        - image: twinproduction/gatus
          imagePullPolicy: IfNotPresent
          name: gatus
          env:
            - name: GATUS_CONFIG_PATH
              value: /config
          envFrom:
            - secretRef:
                name: gatus-secrets
          resources:
            limits:
              cpu: 250m
              memory: 100M
            requests:
              cpu: 50m
              memory: 30M
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 5
          volumeMounts:
            - mountPath: /config
              name: gatus-config
      volumes:
        - name: gatus-config
          configMap:
            name: gatus
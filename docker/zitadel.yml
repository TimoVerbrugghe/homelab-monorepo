version: '3.8'

services:
  zitadel:
    container_name: zitadel
    restart: always
    networks:
      - dockerproxy
    extends:
      service: zitadel-init
    command: start-from-setup --masterkey "${ZITADEL_MASTERKEY}" --config /zitadel.yaml --steps /zitadel.yaml
    environment:
      - ZITADEL_EXTERNALPORT=443
      - ZITADEL_EXTERNALSECURE=true
      - ZITADEL_TLS_ENABLED=false
    depends_on:
      zitadel-init:
        condition: service_completed_successfully
      zitadel-db:
        condition: service_healthy
    labels:
      traefik.http.routers.zitadel.entrypoints: https
      traefik.http.services.zitadel.loadbalancer.server.port: 8080
      traefik.http.services.zitadel.loadbalancer.server.scheme: h2c

  zitadel-db:
    container_name: zitadel-db
    restart: always
    networks:
      - dockerproxy
    image: cockroachdb/cockroach:latest
    command: start-single-node --insecure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health?ready=1"]
      interval: '10s'
      timeout: '30s'
      retries: 5
      start_period: '20s'
    # ports:
    #   - '9090:8080'
    #   - '26257:26257'

  zitadel-init:
    container_name: zitadel-init
    image: ghcr.io/zitadel/zitadel:latest
    command: init --config /zitadel.yaml
    networks:
      - dockerproxy
    depends_on:
      zitadel-db:
        condition: service_healthy
    environment:
      # Using an external domain other than localhost proofs, that the proxy configuration works.
      # If ZITADEL can't resolve a requests original host to this domain,
      # it will return a 404 Instance not found error.
      - ZITADEL_EXTERNALDOMAIN=${ZITADEL_EXTERNALDOMAIN}
      # ZITADEL accesses the database via the docker network.
      - ZITADEL_DATABASE_COCKROACH_HOST=zitadel-db
      # In case something doesn't work as expected,
      # it can be handy to be able to read the access logs.
      - ZITADEL_LOGSTORE_ACCESS_STDOUT_ENABLED=true
      # For convenience, ZITADEL should not ask to change the initial admin users password.
      - ZITADEL_FIRSTINSTANCE_ORG_HUMAN_PASSWORDCHANGEREQUIRED=false
    healthcheck:
      test: ["CMD", "/app/zitadel", "ready"]
      interval: '10s'
      timeout: '5s'
      retries: 5
      start_period: '10s'

  traefik-forward-auth2:
    container_name: traefik-forward-auth2
    restart: always
    image: thomseddon/traefik-forward-auth
    networks:
      - dockerproxy
    environment:
      - PROVIDERS_OIDC_CLIENT_ID=$PROVIDERS_OIDC_CLIENT_ID
      - PROVIDERS_OIDC_CLIENT_SECRET=$PROVIDERS_OIDC_CLIENT_SECRET
      - SECRET=$TRAEFIK_FORWARD_AUTH_SECRET
      - COOKIE_DOMAIN=$TRAEFIK_FORWARD_AUTH_COOKIE_DOMAIN
      - INSECURE_COOKIE=false
      - LOG_LEVEL=info
      - LOG_FORMAT=text
      - PROVIDERS_OIDC_ISSUER_URL=$PROVIDERS_OIDC_ISSUER_URL
      - DEFAULT_PROVIDER=oidc
      - AUTH_HOST=$TRAEFIK_FORWARD_AUTH_HOST
    labels:
      traefik.http.routers.zitadelauth.entrypoints: https
      traefik.http.services.zitadelauth.loadbalancer.server.port: 4181
      traefik.http.routers.zitadelauth.middlewares: zitadel-auth@file
      traefik.http.routers.zitadelauth.rule: Host(`zitadelauth.home.timo.be`) || Host(`zitadelauth.timo.be`)

networks:
  dockerproxy:
    external: true
### ADD FOLLOWING FILE TO PORTAINER WITH THESE ENVIRONMENT VARIABLES
# PUID=1000
# PGID=1000
# PLEX_TOKEN=
# PLEX_CLAIM_TOKEN=

services:

  ### MEDIA PLAYBACK ###
  ### PLEX - PLAYING MEDIA
  plex:
    container_name: plex
    image: plexinc/pms-docker
    restart: always
    networks:
      - dockerproxy
    environment:
      PLEX_UID: ${PUID}
      PLEX_GID: ${PGID}
      TZ: Europe/Brussels
      PLEX_CLAIM: ${PLEX_CLAIM_TOKEN}
    volumes:
      - movies:/movies:rw
      - tvshows:/tv:rw
      - plex:/config:rw
      - /dev/shm:/dev/shm
    devices:
      - /dev/dri:/dev/dri

  plex-autolanguages:
    container_name: plex-autolanguagues
    image: remirigal/plex-auto-languages:latest
    restart: always
    environment:
      - PLEX_URL=http://plex:32400
      - PLEX_TOKEN=${PLEX_TOKEN}
      - TZ=Europe/Brussels
    depends_on:
      - plex
    networks:
      - dockerproxy

  ### Jellyfin - Other way of playing media
  jellyfin:
    container_name: jellyfin
    image: jellyfin/jellyfin
    restart: always
    networks:
      - dockerproxy
    environment:
      - TZ=Europe/Brussels
    volumes:
      - jellyfin:/config
      - /tmp:/cache
      - movies:/movies
      - tvshows:/tv
      - /dev/shm:/dev/shm
    devices:
      - /dev/dri:/dev/dri

  ### MEDIA MANAGEMENT ###
  ### SONARR - MANAGING TVSHOWS
  sonarr:
    container_name: sonarr
    image: lscr.io/linuxserver/sonarr:latest
    restart: always
    networks:
      - dockerproxy
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=Europe/Brussels
    volumes:
      - sonarr:/config
      - tvshows:/tv
      - downloads:/downloads
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8989/ping || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 60

  ### RADARR - MANAGING MOVIES
  radarr:
    container_name: radarr
    image: lscr.io/linuxserver/radarr:latest
    restart: always
    networks:
      - dockerproxy
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=Europe/Brussels
    volumes:
      - radarr:/config
      - movies:/movies
      - downloads:/downloads

  ### BAZARR - MANAGING SUBTITLES
  bazarr:
    container_name: bazarr
    image: lscr.io/linuxserver/bazarr:latest
    restart: always
    networks:
      - dockerproxy
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=Europe/Brussels
    volumes:
      - bazarr:/config
      - movies:/movies
      - tvshows:/tv
    depends_on:
      sonarr:
        condition: service_started
      radarr:
        condition: service_started

  ### MEDIA REQUEST MANAGEMENT ###
  ### OVERSEERR - MANAGING REQUESTS
  overseerr:
    container_name: overseerr
    image: sctx/overseerr:latest
    restart: always
    networks:
      - dockerproxy
    environment:
      - LOG_LEVEL=debug
      - TZ=Europe/Brussels
    volumes:
      - overseerr:/app/config

  ### DOWNLOAD MANAGEMENT ###
  ### PROWLARR - MANAGING TORRENT SITES
  prowlarr:
    container_name: prowlarr
    image: lscr.io/linuxserver/prowlarr:latest
    restart: always
    networks:
      - dockerproxy
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=Europe/Brussels
    volumes:
      - prowlarr:/config
    
  ### QBITTORRENT - MANAGING DOWNLOADS
  qbittorrent: 
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    restart: always
    networks:
      - dockerproxy
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=Europe/Brussels
    volumes:
      - qbittorrent:/config
      - downloads:/downloads

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    restart: always
    networks:
      - dockerproxy
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=Europe/Brussels
      
  readarr:
    image: lscr.io/linuxserver/readarr:develop
    container_name: readarr
    networks:
      - dockerproxy
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=EUROPE/BRUSSELS
    volumes:
      - readarr:/config
      - books:/books #optional
      - downloads:/downloads #optional
    restart: always

volumes:
  sonarr:
  plex:
  bazarr:
  radarr:
  overseerr:
  prowlarr:
  qbittorrent:
  readarr:
  jellyfin:

  movies:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/media/movies'
  tvshows:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/media/tvshows'
  downloads:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/media/downloads'
  books:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/media/books'

networks:
  dockerproxy:
    external: true
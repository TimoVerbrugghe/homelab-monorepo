version: "3.8"

services:
  semaphore-postgres:
    restart: always
    image: postgres
    container_name: semaphore-postgres
    volumes: 
     - semaphore-postgres:/var/lib/postgresql/data
    environment:
     POSTGRES_USER: ${SEMAPHORE_POSTGRES_USER}
     POSTGRES_PASSWORD: ${SEMAPHORE_POSTGRES_PASSWORD}
     POSTGRES_DB: ${SEMAPHORE_POSTGRES_DB}
    labels:
      traefik.enable: false

  semaphore:
    restart: always
    image: semaphoreui/semaphore:latest
    container_name: semaphore
    networks:
      - dockerproxy
    environment:
      SEMAPHORE_DB_USER: ${SEMAPHORE_POSTGRES_USER}
      SEMAPHORE_DB_PASS: ${SEMAPHORE_POSTGRES_PASSWORD}
      SEMAPHORE_DB_HOST: postgres # for postgres, change to: postgres
      SEMAPHORE_DB_PORT: 5432 # change to 5432 for postgres
      SEMAPHORE_DB_DIALECT: postgres # for postgres, change to: postgres
      SEMAPHORE_DB: ${SEMAPHORE_POSTGRES_DB}
      SEMAPHORE_PLAYBOOK_PATH: /tmp/semaphore/
      SEMAPHORE_ADMIN_PASSWORD: ${SEMAPHORE_ADMIN_PASSWORD}
      SEMAPHORE_ADMIN_NAME: ${SEMAPHORE_ADMIN_NAME}
      SEMAPHORE_ADMIN_EMAIL: ${SEMAPHORE_ADMIN_EMAIL}
      SEMAPHORE_ADMIN: ${SEMAPHORE_ADMIN}
      SEMAPHORE_ACCESS_KEY_ENCRYPTION: ${SEMAPHORE_ACCESS_KEY_ENCRYPTION}
      SEMAPHORE_LDAP_ACTIVATED: 'no' # if you wish to use ldap, set to: 'yes' 
    depends_on:
      - semaphore-postgres # for postgres, change to: postgres
    labels:
      traefik.http.routers.semaphore.entrypoints: https
      traefik.http.services.semaphore.loadbalancer.server.port: 3000
      traefik.http.routers.semaphore.middlewares: keycloak-auth@file  
    
volumes:
  semaphore-postgres: # to use postgres, switch to: semaphore-postgres

networks:
  dockerproxy:
    external: true
services:
  sonarr:
    container_name: sonarr
    image: lscr.io/linuxserver/sonarr:latest
    restart: always
    networks:
      - dockerproxy
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=Europe/Brussels
    volumes:
      - sonarr:/config
      - tvshows:/tv
      - downloads:/downloads
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8989/ping || exit 1"]
      interval: 1s
      timeout: 5s
      retries: 60
    labels:
      traefik.http.routers.sonarr.entrypoints: https
      traefik.http.services.sonarr.loadbalancer.server.port: 8989
      tsdproxy.enable: true
      tsdproxy.name: "sonarr"
      tsdproxy.container_port: 8989

  radarr:
    container_name: radarr
    image: lscr.io/linuxserver/radarr:latest
    restart: always
    networks:
      - dockerproxy
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=Europe/Brussels
    volumes:
      - radarr:/config
      - movies:/movies
      - downloads:/downloads
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:7878/ping || exit 1"]
      interval: 1s
      timeout: 5s
      retries: 60
    labels:
      traefik.http.routers.radarr.entrypoints: https
      traefik.http.services.radarr.loadbalancer.server.port: 7878
      tsdproxy.enable: true
      tsdproxy.name: "radarr"
      tsdproxy.container_port: 7878

  bazarr:
    container_name: bazarr
    image: lscr.io/linuxserver/bazarr:latest
    restart: always
    networks:
      - dockerproxy
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=Europe/Brussels
    volumes:
      - bazarr:/config
      - movies:/movies
      - tvshows:/tv
    depends_on:
      sonarr:
        condition: service_started
      radarr:
        condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "curl http://localhost:6767/api/v1/status || exit 1"]
      interval: 1s
      timeout: 5s
      retries: 60
    labels:
      traefik.http.routers.bazarr.entrypoints: https
      traefik.http.services.bazarr.loadbalancer.server.port: 6767
      tsdproxy.enable: true
      tsdproxy.container_port: 6767
      tsdproxy.name: "bazarr"

  overseerr:
    container_name: overseerr
    image: sctx/overseerr:latest
    restart: always
    networks:
      - dockerproxy
    environment:
      - LOG_LEVEL=debug
      - TZ=Europe/Brussels
    volumes:
      - overseerr:/app/config
    healthcheck:
      test: ["CMD-SHELL", "wget http://localhost:5055/api/v1/status -qO /dev/null || exit 1"]
      interval: 1s
      timeout: 5s
      retries: 60
    labels:
      traefik.http.routers.overseerr.rule: Host(`request.thefactory.timo.be`) || Host(`request.timo.be`)
      traefik.http.routers.overseerr.entrypoints: https
      traefik.http.services.overseerr.loadbalancer.server.port: 5055
      tsdproxy.container_port: 5055
      tsdproxy.enable: true
      tsdproxy.name: "request"

  prowlarr:
    container_name: prowlarr
    image: lscr.io/linuxserver/prowlarr:latest
    restart: always
    networks:
      - dockerproxy
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=Europe/Brussels
    volumes:
      - prowlarr:/config
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:9696/ping || exit 1"]
      interval: 1s
      timeout: 5s
      retries: 60
    labels:
      traefik.http.routers.prowlarr.entrypoints: https
      traefik.http.services.prowlarr.loadbalancer.server.port: 9696
      tsdproxy.container_port: 9696
      tsdproxy.enable: true
      tsdproxy.name: "prowlarr"
  
  emulatorjs:
    image: lscr.io/linuxserver/emulatorjs:latest
    container_name: emulatorjs
    restart: always
    network_mode: service:tailscale-emulatorjs
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=Europe/Brussels
    volumes:
      - emulatorjs:/config
      - emulatorjs-data:/data
      - dsgames:/data/nds/roms:rw
      - gbagames:/data/gba/roms:rw
      - gbcgames:/data/gbc/roms:rw
      - ps1games:/data/psx/roms:rw
      - snesgames:/data/snes/roms:rw
    depends_on:
      tailscale-emulatorjs:
        condition: service_healthy
    labels:
      traefik.http.routers.emulatorjs.rule: Host(`games.thefactory.timo.be`) || Host(`games.timo.be`)
      traefik.http.routers.emulatorjs.entrypoints: https
      traefik.http.services.emulatorjs.loadbalancer.server.port: 80
      traefik.http.routers.emulatorjs.service: emulatorjs
      traefik.http.routers.emulatorjs-config.service: emulatorjs-config
      traefik.http.routers.emulatorjs-config.rule: Host(`gamesconfig.thefactory.timo.be`) || Host(`gamesconfig.timo.be`)
      traefik.http.routers.emulatorjs-config.entrypoints: https
      traefik.http.services.emulatorjs-config.loadbalancer.server.port: 3000
      tsdproxy.enable: true
      tsdproxy.container_port: 80
      tsdproxy.name: "games"

  recyclarr:
    image: ghcr.io/recyclarr/recyclarr
    container_name: recyclarr
    user: ${PUID}:${PGID}
    networks:
      - dockerproxy
    volumes:
      - recyclarr:/config
    environment:
      - TZ=Europe/Brussels
      - CRON_SCHEDULE=@daily
    labels:
      traefik.enable: false

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    restart: always
    networks:
      - dockerproxy
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=Europe/Brussels
    labels:
      traefik.enable: false

  lidarr:
    container_name: lidarr
    image: lscr.io/linuxserver/lidarr:latest
    restart: always
    networks:
      - dockerproxy
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=Europe/Brussels
    volumes:
      - lidarr:/config
      - music:/music
      - downloads:/downloads
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8686/ping || exit 1"]
      interval: 1s
      timeout: 5s
      retries: 60
    labels:
      traefik.http.routers.lidarr.entrypoints: https
      traefik.http.services.lidarr.loadbalancer.server.port: 8686
      tsdproxy.enable: true
      tsdproxy.container_port: 8686
      tsdproxy.name: "lidarr"

  swaparr-radarr:
    image: ghcr.io/thijmengthn/swaparr:latest
    container_name: swaparr-radarr
    restart: unless-stopped
    networks:
      - dockerproxy
    environment:
      - BASEURL=http://radarr:7878    # IP or FQDN           (Required)
      - APIKEY=${RADARR_API_KEY}      # Radarr API Key       (Required)                
      - PLATFORM=radarr               # "radarr", "sonarr".. (Optional) default: radarr
      - TIME_THRESHOLD=2h             # 1d, 6h, 30m, etc..   (Optional) default: 2h    
      - SIZE_THRESHOLD=100GB           # 1TB, 1GB, 1MB, etc.. (Optional) default: 25GB  
      - CHECK_INTERVAL=10m            # 1d, 6h, 30m, etc..   (Optional) default: 10m   
      - STRIKE_THRESHOLD=3            # Positive number      (Optional) default: 3     
      - AGGRESSIVE_STRIKES=true      # Boolean              (Optional) default: false 
    labels:
      traefik.enable: false

  swaparr-sonarr: 
    image: ghcr.io/thijmengthn/swaparr:latest
    container_name: swaparr-sonarr
    restart: unless-stopped
    networks:
      - dockerproxy
    environment:
      - BASEURL=http://sonarr:8989    # IP or FQDN           (Required)
      - APIKEY=${SONARR_API_KEY}      # Radarr API Key       (Required)                
      - PLATFORM=radarr               # "radarr", "sonarr".. (Optional) default: radarr
      - TIME_THRESHOLD=2h             # 1d, 6h, 30m, etc..   (Optional) default: 2h    
      - SIZE_THRESHOLD=100GB           # 1TB, 1GB, 1MB, etc.. (Optional) default: 25GB  
      - CHECK_INTERVAL=10m            # 1d, 6h, 30m, etc..   (Optional) default: 10m   
      - STRIKE_THRESHOLD=3            # Positive number      (Optional) default: 3     
      - AGGRESSIVE_STRIKES=true      # Boolean              (Optional) default: false
    labels:
      traefik.enable: false

networks:
  dockerproxy:
    external: true

volumes:
  sonarr:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "/mnt/FranzHopper/appdata/sonarr"
  bazarr:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "/mnt/FranzHopper/appdata/bazarr"
  radarr:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "/mnt/FranzHopper/appdata/radarr"
  overseerr:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "/mnt/FranzHopper/appdata/overseerr"
  prowlarr:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "/mnt/FranzHopper/appdata/prowlarr"
  recyclarr:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "/mnt/FranzHopper/appdata/recyclarr"
  emulatorjs:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "/mnt/FranzHopper/appdata/emulatorjs"
  emulatorjs-data:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "/mnt/FranzHopper/appdata/emulatorjs-data"
  lidarr:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "/mnt/FranzHopper/appdata/lidarr"

  movies:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "/mnt/X.A.N.A./media/movies"
  tvshows:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "/mnt/X.A.N.A./media/tvshows"
  downloads:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "/mnt/FranzHopper/downloads"
  music:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "/mnt/X.A.N.A./media/music"
  dsgames:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "/mnt/X.A.N.A./media/games/ROMs/nds"
  gbagames:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "/mnt/X.A.N.A./media/games/ROMs/gba"
  ps1games:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "/mnt/X.A.N.A./media/games/ROMs/psx"
  snesgames:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "/mnt/X.A.N.A./media/games/ROMs/snes"
  gbcgames:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "/mnt/X.A.N.A./media/games/ROMs/gbc"

services:
  # Database (Postgres)
  resume-postgres:
    image: postgres:16-alpine
    restart: unless-stopped
    networks:
      - dockerproxy
    volumes:
      - resume-postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${RESUME_POSTGRES_DB}
      POSTGRES_USER: ${RESUME_POSTGRES_USER}
      POSTGRES_PASSWORD: ${RESUME_POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Storage (for image uploads)
  resume-minio:
    image: minio/minio
    restart: unless-stopped
    networks:
      - dockerproxy
    command: server /data
    volumes:
      - resume-minio:/data
    environment:
      MINIO_ROOT_USER: ${RESUME_MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${RESUME_MINIO_ROOT_PASSWORD}

  # Chrome Browser (for printing and previews)
  resume-chrome:
    image: ghcr.io/browserless/chromium:latest
    restart: unless-stopped
    networks:
      - dockerproxy
    environment:
      TIMEOUT: 10000
      CONCURRENT: 10
      TOKEN: chrome_token
      EXIT_ON_HEALTH_FAILURE: true
      PRE_REQUEST_HEALTH_CHECK: true

  reactive-resume:
    image: amruthpillai/reactive-resume:latest
    restart: unless-stopped
    networks:
      - dockerproxy
    depends_on:
      - resume-postgres
      - resume-minio
      - resume-chrome
    environment:
      # -- Environment Variables --
      PORT: 3000
      NODE_ENV: production

      # -- URLs --
      PUBLIC_URL: https://resume.pony-godzilla.ts.net
      STORAGE_URL: resume-minio:9000/default

      # -- Printer (Chrome) --
      CHROME_TOKEN: chrome_token
      CHROME_URL: ws://chrome:3000

      # -- Database (Postgres) --
      DATABASE_URL: postgresql://${RESUME_POSTGRES_USER}:${RESUME_POSTGRES_PASSWORD}@resume-postgres:5432/${RESUME_POSTGRES_DB}

      # -- Auth --
      ACCESS_TOKEN_SECRET: access_token_secret
      REFRESH_TOKEN_SECRET: refresh_token_secret

      # -- Emails --
      MAIL_FROM: noreply@localhost
      # SMTP_URL: smtp://user:pass@smtp:587 # Optional

      # -- Storage (Minio) --
      STORAGE_ENDPOINT: minio
      STORAGE_PORT: 9000
      STORAGE_BUCKET: default
      STORAGE_ACCESS_KEY: minioadmin
      STORAGE_SECRET_KEY: minioadmin
      STORAGE_USE_SSL: false
      STORAGE_SKIP_BUCKET_CHECK: false

      # -- Crowdin (Optional) --
      # CROWDIN_PROJECT_ID:
      # CROWDIN_PERSONAL_TOKEN:

      # -- Email (Optional) --
      # DISABLE_SIGNUPS: false
      # DISABLE_EMAIL_AUTH: false

      # -- GitHub (Optional) --
      # GITHUB_CLIENT_ID: github_client_id
      # GITHUB_CLIENT_SECRET: github_client_secret
      # GITHUB_CALLBACK_URL: http://localhost:3000/api/auth/github/callback

      # -- Google (Optional) --
      # GOOGLE_CLIENT_ID: google_client_id
      # GOOGLE_CLIENT_SECRET: google_client_secret
      # GOOGLE_CALLBACK_URL: http://localhost:3000/api/auth/google/callback

volumes:
  minio_data:
  postgres_data:
services:
  tailscale-paperless:
    image: tailscale/tailscale
    container_name: tailscale-paperless
    hostname: paperless
    restart: always
    networks:
      - dockerproxy
    volumes:
      - /dev/net/tun:/dev/net/tun
      - tailscale-paperless:/var/lib/tailscale
    cap_add:
      - net_admin
      - sys_module
    environment:
      - TS_AUTH_KEY=${TS_AUTH_KEY_PAPERLESS}
      - TS_STATE_DIR=/var/lib/tailscale/state
    healthcheck:
      test: ["CMD-SHELL", "tailscale status"]
      interval: 1s
      timeout: 5s
      retries: 60

  paperless-ngx:
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    container_name: paperless-ngx
    restart: unless-stopped
    network_mode: service:tailscale-paperless
    depends_on:
      paperless-broker:
        condition: service_started
      tailscale-paperless:
        condition: service_healthy
    volumes:
      - paperless-data:/usr/src/paperless/data
      - paperless-media:/usr/src/paperless/media
      - paperless-export:/usr/src/paperless/export
      - paperless-consume:/usr/src/paperless/consume
    environment:
      PAPERLESS_REDIS: redis://paperless-broker:6379
      USERMAP_UID: ${PUID}
      USERMAP_GID: ${PGID}
      PAPERLESS_OCR_LANGUAGES: nld fra eng
      PAPERLESS_SECRET_KEY: ${PAPERLESS_SECRET_KEY}
      PAPERLESS_TIME_ZONE: Europe/Brussels
      PAPERLESS_OCR_LANGUAGE: eng
      PAPERLESS_TIKA_ENABLED: 1
      PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://paperless-gotenberg:3000
      PAPERLESS_TIKA_ENDPOINT: http://paperless-tika:9998
      PAPERLESS_AUTO_LOGIN_USERNAME: ${PAPERLESS_USERNAME}
      PAPERLESS_ADMIN_USER: ${PAPERLESS_USERNAME}
      PAPERLESS_ADMIN_MAIL: ${PAPERLESS_EMAIL}
      PAPERLESS_ADMIN_PASSWORD: ${PAPERLESS_PASSWORD}
      PAPERLESS_URL: https://paperless.pony-godzilla.ts.net
      PAPERLESS_OUTLOOK_OAUTH_CLIENT_ID: ${PAPERLESS_OUTLOOK_OAUTH_CLIENT_ID}
      PAPERLESS_OUTLOOK_OAUTH_CLIENT_SECRET: ${PAPERLESS_OUTLOOK_OAUTH_CLIENT_SECRET}

  paperless-broker:
    image: docker.io/library/redis:7
    container_name: paperless-broker
    restart: unless-stopped
    networks:
      - dockerproxy
    volumes:
      - paperless-broker:/data

  paperless-gotenberg:
    image: docker.io/gotenberg/gotenberg:8.7
    restart: unless-stopped
    networks:
      - dockerproxy
    # The gotenberg chromium route is used to convert .eml files. We do not
    # want to allow external content like tracking pixels or even javascript.
    command:
      - "gotenberg"
      - "--chromium-disable-javascript=true"
      - "--chromium-allow-list=file:///tmp/.*"

  paperless-tika:
    image: docker.io/apache/tika:latest
    restart: unless-stopped
    networks:
      - dockerproxy

volumes:
  tailscale-paperless:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "/mnt/FranzHopper/appdata/tailscale-paperless"
  paperless-data:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "/mnt/FranzHopper/appdata/paperless/data"
  paperless-media:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "/mnt/FranzHopper/appdata/paperless/media"
  paperless-export:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "/mnt/FranzHopper/appdata/paperless/export"
  paperless-consume:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "/mnt/FranzHopper/appdata/paperless/consume"
  paperless-broker:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "/mnt/FranzHopper/appdata/paperless/broker"

networks:
  dockerproxy:
    external: true

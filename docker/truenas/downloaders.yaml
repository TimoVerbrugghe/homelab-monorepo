services:
  qbittorrent: 
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    restart: always
    networks:
      - dockerproxy
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=Europe/Brussels
      - DOCKER_MODS=ghcr.io/gabe565/linuxserver-mod-vuetorrent
    volumes:
      - qbittorrent:/config
      - downloads:/downloads
    ports:
      - 12000:8080
    labels:
      tsdproxy.enable: true
      tsdproxy.name: "qbittorrent"
      tsdproxy.container_port: 8080
      tsdproxy.ephemeral: false

  jdownloader2:
    image: jlesage/jdownloader-2
    container_name: jdownloader2
    restart: always
    networks:
      - dockerproxy
    environment:
      - USER_ID=${PUID}
      - GROUP_ID=${PGID}
    volumes:
      - jdownloader2:/config
      - downloads:/output
    ports:
      - 12001:5800
    labels:
      tsdproxy.enable: true
      tsdproxy.name: "jdownloader2"
      tsdproxy.container_port: 5800
      tsdproxy.ephemeral: false

  metube:
    image: ghcr.io/alexta69/metube
    container_name: metube
    restart: always
    networks:
      - dockerproxy
    environment:
      - UID=${PUID}
      - GID=${PGID}
      - TEMP_DIR=/tmp
      - DARK_MODE=true
      - DOWNLOAD_DIR=/downloads/metube
      - YTDL_OPTIONS={"writesubtitles":true,"writeautomaticsub":true,"subtitleslangs":["en","en-US","en-GB","en-orig","nl","nl-BE","nl-NL","-live_chat"],"updatetime":false,"postprocessors":[{"key":"FFmpegEmbedSubtitle","already_have_subtitle":false},{"key":"FFmpegMetadata","add_chapters":true}]}
    volumes:
      - downloads:/downloads
      - /dev/shm:/tmp
    ports:
      - 12002:8081
    labels:
      tsdproxy.enable: true
      tsdproxy.name: "metube"
      tsdproxy.container_port: 8081
      tsdproxy.ephemeral: false

  ariang:
    image: hurlenko/aria2-ariang
    container_name: ariang
    restart: always
    networks:
      - dockerproxy
    volumes:
      - downloads:/aria2/data
      - aria2-conf:/aria2/conf
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - RPC_SECRET=secret
      - ARIA2RPCPORT=443
      - EMBED_RPC_SECRET=true # embeds RPC_SECRET into web ui js code. This allows you to skip entering the secret but everyone who has access to the webui will be able to see it. Only use this with some sort of authentication (e.g. basic auth)
    ports:
      - 12003:8080
      - 12004:6800
    labels:
      tsdproxy.enable: true
      tsdproxy.name: "ariang"
      tsdproxy.container_port: 8080
      tsdproxy.ephemeral: false

  spotdl:
    container_name: spotdl
    image: spotdl/spotify-downloader
    command: web --host 0.0.0.0 --web-use-output-dir --keep-alive
    environment:
      - PUID=${PUID} #CHANGE_TO_YOUR_UID
      - PGID=${PGID} #CHANGE_TO_YOUR_GID
      - TZ=Europe/Brussels #CHANGE_TO_YOUR_TZ
    ports:
      - 12005:8800
    volumes:
      - music:/music #must use the :/music for config to work.
      - spotdl:/root/.spotdl
    restart: always
    networks:
      - dockerproxy
    labels:
      tsdproxy.enable: true
      tsdproxy.name: "spotdl"
      tsdproxy.container_port: 8800
      tsdproxy.ephemeral: false

volumes:
  qbittorrent:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "/mnt/FranzHopper/appdata/qbittorrent"
  jdownloader2:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "/mnt/FranzHopper/appdata/jdownloader2"
  downloads:
    driver_opts:
      type: "none"
      o: "bind"
      device: "/mnt/FranzHopper/downloads"
  aria2-conf:
    driver_opts:
      type: "none"
      o: "bind"
      device: "/mnt/FranzHopper/appdata/aria2-conf"
  # Using a different volume for spotdl web, otherwise it won't download a song that I might have already downloaded using my cron jobs 
  music:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "/mnt/FranzHopper/downloads/spotdl"
  spotdl:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "/mnt/FranzHopper/appdata/spotdl"

networks:
  dockerproxy:
    external: true

# icloudpd-timo:
#   image: boredazfcuk/icloudpd
#   container_name: icloudpd-timo
#   restart: always
#   networks: 
#     - dockerproxy
#   environment:
#     - apple_id={$ICLOUDPD_APPLE_ID}
#     - authentication_type=MFA

#     - synchronisation_interval=86400
#     - TZ=Europe/London
#     - download_path=/home/user/iCloud
#     - skip_check=true
#     - auto_delete=true
#     - UMASK=000
#     - PUID=${PUID}
#     - PGID=${PGID}
#     - notification_type=Webhook
#     - notification_title=iCloudPD
#     - webhook_server=hooks.slack.com
#     - webhook_port=443
#     - webhook_path=/services/
#     - webhook_id={$ICLOUDPD_WEBHOOK_ID}
#     - webhook_body=text
#     - webhook_https=true
#   volumes:
#       - icloudpd-timo:/config
#       - icloudpd-data:/home/user/iCloud
#   labels:
#     traefik.enable: false
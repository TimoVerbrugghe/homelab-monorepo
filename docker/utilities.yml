version: "3.8"

services:
  localspeedtest:
    restart: always
    container_name: localspeedtest
    image: openspeedtest/latest
    networks:
      - dockerproxy
    labels:
      traefik.http.routers.localspeedtest.entrypoints: https
      traefik.http.services.localspeedtest.loadbalancer.server.port: 3000
      traefik.http.routers.localspeedtest.middlewares: keycloak-auth@file

  scanservjs:
    image: sbs20/scanservjs:latest
    container_name: scanservjs
    restart: unless-stopped
    networks:
      - dockerproxy
    volumes:
      - scanservjs-scans:/app/data/output
      - scanservjs-config:/app/config
    devices: 
      - /dev/bus/usb:/dev/bus/usb
    labels:
      traefik.http.routers.scanservjs.entrypoints: https
      traefik.http.services.scanservjs.loadbalancer.server.port: 8080
      traefik.http.routers.scanservjs.middlewares: keycloak-auth@file
      traefik.http.routers.scanservjs.rule: Host(`scan.home.timo.be`) || Host(`scan.timo.be`)

  airsane:
    image: claytsay/docker-airsane
    container_name: airsane
    restart: unless-stopped
    networks: # Separate dockervlan network because this container runs avahi and don't want this to clash with other containers running avahi as well
      dockervlan:
        ipv4_address: ${AIRSANE_IP_ADDRESS}
    environment:
      SANED_ACL: 10.10.10.0/24
      SANED_DEVICE: genesys:libusb:009:002
    devices: 
      - /dev/bus/usb:/dev/bus/usb
    labels:
      traefik.enable: false

  bitwarden:
    image: vaultwarden/server:latest
    container_name: bitwarden
    restart: unless-stopped
    networks:
      - dockerproxy
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      DOMAIN: ${BITWARDEN_DOMAIN} # Your domain; vaultwarden needs to know it's https to work properly with attachments
      SERVER_ADMIN_EMAIL: timo@hotmail.be
      SIGNUPS_ALLOWED: false
      INVITATIONS_ALLOWED: false
      WEBSOCKET_ENABLED: false
      ADMIN_TOKEN: ${BITWARDEN_ADMIN_TOKEN}
    volumes:
      - bitwarden:/data
    labels:
      traefik.http.routers.bitwarden.entrypoints: https
      traefik.http.services.bitwarden.loadbalancer.server.port: 80
    
  bitwarden-export:
    image: ghcr.io/timoverbrugghe/bitwarden-export
    container_name: bitwarden-export
    restart: unless-stopped
    networks:
      - dockerproxy
    volumes:
      - bitwarden-export:/appdata
    environment:
      CRON_SCHEDULE: 0
      BW_CLIENTID: ${BW_CLIENTID}
      BW_CLIENTSECRET: ${BW_CLIENTSECRET}
      BW_SERVER: http://bitwarden
      BW_PASSWORD: ${BW_PASSWORD}
    labels:
      traefik.enable: false

  webtop:
    image: lscr.io/linuxserver/webtop:latest
    container_name: webtop
    restart: unless-stopped
    security_opt:
      - seccomp=unconfined
    networks:
      - dockerproxy
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Brussels
    volumes:
      - webtop:/config
    shm_size: "1gb"
    labels:
      traefik.http.routers.webtop.entrypoints: https
      traefik.http.services.webtop.loadbalancer.server.port: 3000
      traefik.http.routers.webtop.middlewares: keycloak-auth@file  

  uptimekuma:
    image: louislam/uptime-kuma
    container_name: uptimekuma
    restart: unless-stopped
    networks:
      - dockerproxy
    volumes:
      - uptimekuma:/app/data
    labels:
      traefik.http.routers.uptime-kuma.entrypoints: https
      traefik.http.services.uptime-kuma.loadbalancer.server.port: 3001
      traefik.http.routers.uptime-kuma.middlewares: keycloak-auth@file    
    
  netbootxyz:
    image: ghcr.io/netbootxyz/netbootxyz
    container_name: netbootxyz
    restart: always
    networks:
      dockervlan:
        ipv4_address: ${NETBOOTXYZ_IP_ADDRESS}
    volumes:
      - netbootxyz-config:/config
      - netbootxyz-assets:/assets
    labels:
      traefik.enable: false

  iventoy:
    image: ziggyds/iventoy
    container_name: iventoy
    restart: always
    privileged: true
    networks:
      dockervlan:
        ipv4_address: ${IVENTOY_IP_ADDRESS}
    volumes:
      - iventoy-config:/app/data
      - iventoy-log:/app/log
      - isos:/app/iso
    labels:
      traefik.enable: false

volumes:
  scanservjs-scans:
  scanservjs-config:
  bitwarden:
  bitwarden-export:
    driver: local
    driver_opts:
      type: "nfs"
      o: "addr=nfs.local.timo.be,nolock,rw,vers=4.2,relatime,sec=sys,hard"
      device: ":/mnt/X.A.N.A./media/other/bitwarden-export"
  webtop:
  uptimekuma:
  netbootxyz-config:
  netbootxyz-assets:
  iventoy-config:
  iventoy-log:
  isos:
    driver: local
    driver_opts:
      type: "nfs"
      o: "addr=nfs.local.timo.be,nolock,rw,vers=4.2,relatime,sec=sys,hard"
      device: ":/mnt/FranzHopper/isos"

networks:
  dockerproxy:
    external: true
  dockervlan:
    external: true

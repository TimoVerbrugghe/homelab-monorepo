services:
  stirling-pdf:
    image: frooodle/s-pdf:latest
    networks:
      - dockerproxy
    container_name: stirlingpdf
    volumes:
      - stirlingpdf-trainingdata:/usr/share/tessdata #Required for extra OCR languages
      - stirlingpdf-configs:/configs
    environment:
      - DOCKER_ENABLE_SECURITY=false
      - INSTALL_BOOK_AND_ADVANCED_HTML_OPS=false
    labels:
      traefik.http.routers.stirlingpdf.entrypoints: https
      traefik.http.services.stirlingpdf.loadbalancer.server.port: 8080
      traefik.http.routers.stirlingpdf.middlewares: keycloak-auth@file

  localspeedtest:
    restart: always
    container_name: localspeedtest
    image: openspeedtest/latest
    networks:
      - dockerproxy
    labels:
      traefik.http.routers.localspeedtest.entrypoints: https
      traefik.http.services.localspeedtest.loadbalancer.server.port: 3000
      traefik.http.routers.localspeedtest.middlewares: keycloak-auth@file

  bitwarden:
    image: vaultwarden/server:latest
    container_name: bitwarden
    restart: unless-stopped
    networks:
      - dockerproxy
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      DOMAIN: ${BITWARDEN_DOMAIN} # Your domain; vaultwarden needs to know it's https to work properly with attachments
      SERVER_ADMIN_EMAIL: timo@hotmail.be
      SIGNUPS_ALLOWED: false
      INVITATIONS_ALLOWED: false
      WEBSOCKET_ENABLED: false
      ADMIN_TOKEN: ${BITWARDEN_ADMIN_TOKEN}
    volumes:
      - bitwarden:/data
    labels:
      traefik.http.routers.bitwarden.entrypoints: https
      traefik.http.services.bitwarden.loadbalancer.server.port: 80
    
  bitwarden-export:
    image: ghcr.io/timoverbrugghe/bitwarden-export
    container_name: bitwarden-export
    restart: unless-stopped
    networks:
      - dockerproxy
    volumes:
      - bitwarden-export:/appdata
    environment:
      CRON_SCHEDULE: ${BW_CRON_SCHEDULE}
      BW_CLIENTID: ${BW_CLIENTID}
      BW_CLIENTSECRET: ${BW_CLIENTSECRET}
      BW_SERVER: http://bitwarden
      BW_PASSWORD: ${BW_PASSWORD}
    labels:
      traefik.enable: false

  uptimekuma:
    image: louislam/uptime-kuma
    container_name: uptimekuma
    restart: unless-stopped
    networks:
      - dockerproxy
    volumes:
      - uptimekuma:/app/data
    labels:
      traefik.http.routers.uptime-kuma.entrypoints: https
      traefik.http.services.uptime-kuma.loadbalancer.server.port: 3001
      traefik.http.routers.uptime-kuma.middlewares: keycloak-auth@file    
    
  netbootxyz:
    image: ghcr.io/netbootxyz/netbootxyz
    container_name: netbootxyz
    restart: always
    networks:
      dockervlan:
        ipv4_address: ${NETBOOTXYZ_IP_ADDRESS}
    volumes:
      - netbootxyz-config:/config
      - netbootxyz-assets:/assets
    labels:
      traefik.enable: false

  ns-usbloader:
    image: ghcr.io/timoverbrugghe/ns-usbloader
    container_name: ns-usbloader
    restart: unless-stopped
    networks:
      - dockerproxy
    volumes:
      - downloads:/downloads
      - games:/nsp
      - ns-usbloader-config:/root/.java/.userPrefs/NS-USBloader
    ports:
      - 8080:8080
      - 6042:6042
    labels:
      traefik.http.routers.ns-usbloader.entrypoints: https
      traefik.http.services.ns-usbloader.loadbalancer.server.port: 8080
      traefik.http.routers.ns-usbloader.middlewares: keycloak-auth@file

  iventoy:
    image: thedrobe/iventoy-docker
    container_name: iventoy
    restart: always
    privileged: true
    networks:
      dockervlan:
        ipv4_address: ${IVENTOY_IP_ADDRESS}
    volumes:
      - iventoy-config:/app/data
      - iventoy-log:/app/log
      - isos:/app/iso
    environment:
      - AUTO_START_PXE=true

  mealie:
    image: ghcr.io/mealie-recipes/mealie
    container_name: mealie
    restart: always
    volumes:
      - mealie:/app/data/
    environment:
      ALLOW_SIGNUP: false
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: Europe/Brussels
      OPENAI_API_KEY: ${MEALIE_OPENAI_API_KEY}
      OPENAI_MODEL: gpt-4o
      OPENAI_BASE_URL: https://${MEALIE_OPENAI_ENDPOINT}.openai.azure.com/openai/deployments/gpt-4o
      OPENAI_CUSTOM_PARAMS: '{"api-version":"2024-08-01-preview"}'
      OPENAI_CUSTOM_HEADERS: '{"api-key":"${MEALIE_OPENAI_API_KEY}"}'   
      BASE_URL : https://mealie.home.timo.be 
    labels:
      traefik.http.routers.mealie.entrypoints: https
      traefik.http.services.mealie.loadbalancer.server.port: 9000
      traefik.http.services.mealie.loadbalancer.serversTransport: http1transport

volumes:
  bitwarden:
  bitwarden-export:
    driver: local
    driver_opts:
      type: "nfs"
      o: "addr=nfs.local.timo.be,nolock,rw,vers=4.2,relatime,sec=sys,hard"
      device: ":/mnt/X.A.N.A./media/other/bitwarden-export"
  uptimekuma:
  netbootxyz-config:
  netbootxyz-assets:
  iventoy-config:
  iventoy-log:
  stirlingpdf-configs:
  stirlingpdf-trainingdata:
  isos:
    driver: local
    driver_opts:
      type: "nfs"
      o: "addr=nfs.local.timo.be,nolock,rw,vers=4.2,relatime,sec=sys,hard"
      device: ":/mnt/FranzHopper/isos"
  downloads:
    driver_opts:
      type: "nfs"
      o: "addr=nfs.local.timo.be,nolock,rw,vers=4.2,relatime,sec=sys,hard"
      device: ":/mnt/FranzHopper/downloads"
  games:
    driver: local
    driver_opts:
      type: "nfs"
      o: "addr=nfs.local.timo.be,nolock,rw,vers=4.2,relatime,sec=sys,hard"
      device: ":/mnt/X.A.N.A./media/games/ROMs"
  ns-usbloader-config:
  mealie:

networks:
  dockerproxy:
    external: true
  dockervlan:
    external: true

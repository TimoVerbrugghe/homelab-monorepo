### ADD FOLLOWING FILE TO PORTAINER WITH THESE ENVIRONMENT VARIABLES
# PUID=1000
# PGID=1000
# TS_AUTH_KEY_QBITTORRENT=
# TS_AUTH_KEY_PROWLARR=
# TS_AUTH_KEY_OVERSEERR=
# TS_AUTH_KEY_BAZARR=
# TS_AUTH_KEY_RADARR=
# TS_AUTH_KEY_SONARR=
# PLEX_TOKEN=
# PLEX_CLAIM_TOKEN=
# TS_AUTH_KEY_PLEX=

services:

  ### MEDIA PLAYBACK ###
  ### PLEX - PLAYING MEDIA
  tailscale-plex:
    image: tailscale/tailscale
    container_name: tailscale-plex
    hostname: plex
    restart: always
    volumes:
      - /dev/net/tun:/dev/net/tun
      - tailscale-plex:/var/lib/tailscale
    cap_add:
      - net_admin
      - sys_module
    environment:
      - TS_AUTH_KEY=${TS_AUTH_KEY_PLEX}
      - TS_STATE_DIR=/var/lib/tailscale/state
    ports:
      - 32400:32400/tcp
    healthcheck:
      test: ["CMD-SHELL", "sleep 10 && tailscale status"]
      interval: 1s
      timeout: 5s
      retries: 60

  plex:
    container_name: plex
    image: plexinc/pms-docker
    restart: always
    network_mode: service:tailscale-plex
    environment:
      PLEX_UID: ${PUID}
      PLEX_GID: ${PGID}
      TZ: Europe/Brussels
      PLEX_CLAIM: ${PLEX_CLAIM_TOKEN}
    volumes:
      - movies:/movies:rw
      - tvshows:/tv:rw
      - plex:/config:rw
      - /dev/shm:/dev/shm
    devices:
      - /dev/dri:/dev/dri
    depends_on:
      tailscale-plex:
        condition: service_healthy

  plex-autolanguages:
    container_name: plex-autolanguagues
    image: remirigal/plex-auto-languages:latest
    restart: always
    environment:
      - PLEX_URL=http://plex:32400
      - PLEX_TOKEN=${PLEX_TOKEN}
      - TZ=Europe/Brussels
    depends_on:
      - plex

  ### Jellyfin - Other way of playing media
  tailscale-jellyfin:
    image: tailscale/tailscale
    container_name: tailscale-jellyfin
    hostname: jelly
    restart: always
    volumes:
      - /dev/net/tun:/dev/net/tun
      - tailscale-jellyfin:/var/lib/tailscale
    cap_add:
      - net_admin
      - sys_module
    environment:
      - TS_AUTH_KEY=${TS_AUTH_KEY_JELLYFIN}
      - TS_STATE_DIR=/var/lib/tailscale/state
    ports:
      - 8096:8096/tcp # local access
      - 1901:1900/udp # autodiscovery
      - 7359:7359/udp # autodiscovery
    healthcheck:
      test: ["CMD-SHELL", "sleep 10 && tailscale status"]
      interval: 1s
      timeout: 5s
      retries: 60
      
  jellyfin:
    container_name: jellyfin
    image: jellyfin/jellyfin
    restart: always
    network_mode: service:tailscale-jellyfin
    environment:
      - TZ=Europe/Brussels
    volumes:
      - jellyfin:/config
      - /tmp:/cache
      - movies:/movies
      - tvshows:/tv
      - /dev/shm:/dev/shm
    devices:
      - /dev/dri:/dev/dri
    depends_on:
      tailscale-jellyfin:
        condition: service_healthy

  ### MEDIA MANAGEMENT ###
  ### SONARR - MANAGING TVSHOWS
  tailscale-sonarr:
    image: tailscale/tailscale
    container_name: tailscale-sonarr
    hostname: sonarr
    restart: always
    volumes:
      - /dev/net/tun:/dev/net/tun
      - tailscale-sonarr:/var/lib/tailscale
    cap_add:
      - net_admin
      - sys_module
    environment:
      - TS_AUTH_KEY=${TS_AUTH_KEY_SONARR}
      - TS_STATE_DIR=/var/lib/tailscale/state
    ports:
      - 8989:8989/tcp # web ui
    healthcheck:
      test: ["CMD-SHELL", "sleep 10 && tailscale status"]
      interval: 1s
      timeout: 5s
      retries: 60

  sonarr:
    container_name: sonarr
    image: lscr.io/linuxserver/sonarr:latest
    restart: always
    network_mode: service:tailscale-sonarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=Europe/Brussels
    volumes:
      - sonarr:/config
      - tvshows:/tv
      - downloads:/downloads
    depends_on:
      tailscale-sonarr:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8989/ping || exit 1"]
      interval: 1s
      timeout: 5s
      retries: 60

  ### RADARR - MANAGING MOVIES
  tailscale-radarr:
    image: tailscale/tailscale
    container_name: tailscale-radarr
    hostname: radarr
    restart: always
    volumes:
      - /dev/net/tun:/dev/net/tun
      - tailscale-radarr:/var/lib/tailscale
    cap_add:
      - net_admin
      - sys_module
    environment:
      - TS_AUTH_KEY=${TS_AUTH_KEY_RADARR}
      - TS_STATE_DIR=/var/lib/tailscale/state
    ports:
      - 7878:7878/tcp # web ui
    healthcheck:
      test: ["CMD-SHELL", "sleep 10 && tailscale status"]
      interval: 1s
      timeout: 5s
      retries: 60

  radarr:
    container_name: radarr
    image: lscr.io/linuxserver/radarr:latest
    restart: always
    network_mode: service:tailscale-radarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=Europe/Brussels
    volumes:
      - radarr:/config
      - movies:/movies
      - downloads:/downloads
    depends_on:
      tailscale-radarr:
        condition: service_healthy

  ### BAZARR - MANAGING SUBTITLES
  tailscale-bazarr:
    image: tailscale/tailscale
    container_name: tailscale-bazarr
    hostname: bazarr
    restart: always
    volumes:
      - /dev/net/tun:/dev/net/tun
      - tailscale-bazarr:/var/lib/tailscale
    cap_add:
      - net_admin
      - sys_module
    environment:
      - TS_AUTH_KEY=${TS_AUTH_KEY_BAZARR}
      - TS_STATE_DIR=/var/lib/tailscale/state
    ports:
      - 6767:6767/tcp # web ui
    healthcheck:
      test: ["CMD-SHELL", "sleep 10 && tailscale status"]
      interval: 1s
      timeout: 5s
      retries: 60

  bazarr:
    container_name: bazarr
    image: lscr.io/linuxserver/bazarr:latest
    restart: always
    network_mode: service:tailscale-bazarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=Europe/Brussels
    volumes:
      - bazarr:/config
      - movies:/movies
      - tvshows:/tv
    depends_on:
      tailscale-bazarr:
        condition: service_healthy
      sonarr:
        condition: service_started
      radarr:
        condition: service_started

  ### MEDIA REQUEST MANAGEMENT ###
  ### OVERSEERR - MANAGING REQUESTS
  tailscale-overseerr:
    image: tailscale/tailscale
    container_name: tailscale-overseerr
    hostname: request
    restart: always
    volumes:
      - /dev/net/tun:/dev/net/tun
      - tailscale-overseerr:/var/lib/tailscale
    cap_add:
      - net_admin
      - sys_module
    environment:
      - TS_AUTH_KEY=${TS_AUTH_KEY_OVERSEERR}
      - TS_STATE_DIR=/var/lib/tailscale/state
    ports:
      - 5055:5055/tcp
    healthcheck:
      test: ["CMD-SHELL", "sleep 10 && tailscale status"]
      interval: 1s
      timeout: 5s
      retries: 60

  overseerr:
    container_name: overseerr
    image: sctx/overseerr:latest
    restart: always
    network_mode: service:tailscale-overseerr
    environment:
      - LOG_LEVEL=debug
      - TZ=Europe/Brussels
    volumes:
      - overseerr:/app/config
    depends_on:
      tailscale-overseerr:
        condition: service_healthy
      
  ### DOWNLOAD MANAGEMENT ###
  ### PROWLARR - MANAGING TORRENT SITES
  tailscale-prowlarr:
    image: tailscale/tailscale
    container_name: tailscale-prowlarr
    hostname: prowlarr
    restart: always
    volumes:
      - /dev/net/tun:/dev/net/tun
      - tailscale-prowlarr:/var/lib/tailscale
    cap_add:
      - net_admin
      - sys_module
    environment:
      - TS_AUTH_KEY=${TS_AUTH_KEY_PROWLARR}
      - TS_STATE_DIR=/var/lib/tailscale/state
    ports:
      - 9696:9696/tcp
    healthcheck:
      test: ["CMD-SHELL", "sleep 10 && tailscale status"]
      interval: 1s
      timeout: 5s
      retries: 60

  prowlarr:
    container_name: prowlarr
    image: lscr.io/linuxserver/prowlarr:latest
    restart: always
    network_mode: service:tailscale-prowlarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=Europe/Brussels
    volumes:
      - prowlarr:/config
    depends_on:
      tailscale-prowlarr:
        condition: service_healthy
  
  ### QBITTORRENT - MANAGING DOWNLOADS
  tailscale-qbittorrent:
    image: tailscale/tailscale
    container_name: tailscale-qbittorrent
    hostname: qbittorrent
    restart: always
    volumes:
      - /dev/net/tun:/dev/net/tun
      - tailscale-qbittorrent:/var/lib/tailscale
    cap_add:
      - net_admin
      - sys_module
    environment:
      - TS_AUTH_KEY=${TS_AUTH_KEY_QBITTORRENT}
      - TS_STATE_DIR=/var/lib/tailscale/state
    ports: 
      - 8080:8080/tcp
    healthcheck:
      test: ["CMD-SHELL", "sleep 10 && tailscale status"]
      interval: 1s
      timeout: 5s
      retries: 60

  qbittorrent: 
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    restart: always
    network_mode: service:tailscale-qbittorrent
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=Europe/Brussels
    volumes:
      - qbittorrent:/config
      - downloads:/downloads
    depends_on:
      tailscale-qbittorrent:
        condition: service_healthy

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    restart: always
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=Europe/Brussels
      
  tailscale-readarr:
    image: tailscale/tailscale
    container_name: tailscale-readarr
    hostname: readarr
    restart: always
    volumes:
      - /dev/net/tun:/dev/net/tun
      - tailscale-readarr:/var/lib/tailscale
    cap_add:
      - net_admin
      - sys_module
    environment:
      - TS_AUTH_KEY=${TS_AUTH_KEY_READARR}
      - TS_STATE_DIR=/var/lib/tailscale/state
    ports:
      - 8787:8787
    healthcheck:
      test: ["CMD-SHELL", "sleep 10 && tailscale status"]
      interval: 1s
      timeout: 5s
      retries: 60

  readarr:
    image: lscr.io/linuxserver/readarr:develop
    container_name: readarr
    network_mode: service:tailscale-readarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=EUROPE/BRUSSELS
    volumes:
      - readarr:/config
      - books:/books #optional
      - downloads:/downloads #optional
    restart: always
    depends_on:
      tailscale-readarr:
        condition: service_healthy

volumes:
  tailscale-sonarr:
  sonarr:
  tailscale-plex:
  plex:
  tailscale-bazarr:
  bazarr:
  tailscale-radarr:
  radarr:
  tailscale-overseerr:
  overseerr:
  tailscale-prowlarr:
  prowlarr:
  tailscale-qbittorrent:
  qbittorrent:
  readarr:
  tailscale-readarr:
  jellyfin:
  tailscale-jellyfin:

  movies:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/media/movies'
  tvshows:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/media/tvshows'
  downloads:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/media/downloads'
  books:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/media/books'
version: "3.8"

services:
  adguardhome:
    image: adguard/adguardhome
    container_name: adguardhome
    restart: unless-stopped
    networks:
      dockervlan:
        ipv4_address: ${ADGUARDHOME_IP_ADDRESS}
    volumes:
      - adguardhome-work:/opt/adguardhome/work
      - adguardhome-conf:/opt/adguardhome/conf
      - /etc/letsencrypt:/etc/letsencrypt
    labels:
      traefik.enable: false

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      traefik.enable: false

  cloudflared-tunnel:
    container_name: cloudflared-tunnel
    image: cloudflare/cloudflared
    restart: always
    command: tunnel run
    environment:
      - TUNNEL_TOKEN=${CLOUDFLARED_TUNNEL_TOKEN}
    labels:
      traefik.enable: false

  tailscale:
    image: tailscale/tailscale
    container_name: tailscale
    restart: always
    network_mode: host
    privileged: true
    volumes:
      - /var/lib:/var/lib
      - /dev/net/tun:/dev/net/tun
      - tailscale:/state
    environment:
      - TS_AUTH_KEY=${TS_AUTH_KEY}
      - TS_ROUTES=${TS_ROUTES}
      - TS_EXTRA_ARGS=--advertise-exit-node
      - TS_STATE_DIR=/state
    labels:
      traefik.enable: false

  vscode-tunnel:
    image: ghcr.io/timoverbrugghe/vscode-remote-tunnel-docker:main
    container_name: vscode-tunnel
    hostname: ${VSCODE_TUNNEL_NAME}
    restart: unless-stopped
    volumes:
      - /var/lib/docker/volumes:/home/workspace
      - vscode-tunnel:/root/.vscode # To persist tunnel registration
      - vscode-tunnel-server:/root/.vscode-server # To persist extensions and other settings
    labels:
      traefik.enable: false

volumes:
  tailscale:
  adguardhome-work:
  adguardhome-conf:
  vscode-tunnel:
  vscode-tunnel-server:

networks:
  dockervlan:
    name: dockervlan
    driver: macvlan
    driver_opts:
      parent: eth0
    ipam:
      config:
        - subnet: "10.10.10.0/24"
          gateway: "10.10.10.1"
---
# Creating namespace for keycloak and stackgres to be installed in
apiVersion: v1
kind: Namespace
metadata:
  name: keycloak
---
# Create script to setup keycloak database
apiVersion: stackgres.io/v1
kind: SGScript
metadata:
  name: keycloak-sgscript
  namespace: keycloak
spec:
  managedVersions: true
  continueOnError: false
  scripts:
  - name: create-keycloak-user
    script: |
      CREATE USER keycloak WITH PASSWORD 'keycloak' CREATEDB CREATEROLE;
  - name: create-keycloak-database
    script: |
      CREATE DATABASE keycloak;
  - name: assign-keycloak-user-to-database
    script: |
      GRANT ALL PRIVILEGES ON DATABASE keycloak TO keycloak;
---
# Create custom pooling config to disable the startup parameter search_path
apiVersion: stackgres.io/v1
kind: SGPoolingConfig
metadata:
  name: keycloak-poolconfig
  namespace: keycloak
spec:
  pgBouncer:
    pgbouncer.ini:
      pgbouncer:
        ignore_startup_parameters: "search_path, extra_float_digits"
---
# Create stackgres cluster for keycloak
apiVersion: stackgres.io/v1
kind: SGCluster
metadata:
  name: postgres-keycloak
  namespace: keycloak
spec:
  instances: 3
  configurations:
    sgPoolingConfig: "keycloak-poolconfig"
  postgres:
    version: "latest"
  prometheusAutobind: false
  pods:
    persistentVolume:
      size: "2Gi"
      # Use k3s's local-path storage class to run the database locally on the nodes
      storageClass: "longhorn"
  managedSql:
    scripts:
    - id: 1
      sgScript: keycloak-sgscript
---
# Deploy keycloak using bitnami helm chart
apiVersion: helm.cattle.io/v1
kind: HelmChart
metadata:
  name: keycloak
  namespace: kube-system
spec:
  chart: keycloak
  targetNamespace: keycloak
  repo: https://charts.bitnami.com/bitnami
  valuesContent: |-
    image:
      tag: latest
    auth:
      adminUser: admin
      adminPassword: admin
      tls:
        enabled: true
        autoGenerated: true
    proxy: passthrough
    replicaCount: 3
    service:
      type: ClusterIP
    postgresql:
      enabled: false
    externalDatabase:
      host: postgres-keycloak.keycloak.svc.cluster.local
      user: keycloak
      database: keycloak
      password: keycloak
    cache:
      enabled: true
    extraEnvVars:
      - name: KEYCLOAK_PRODUCTION
        value: "true"
      - name: KC_HOSTNAME
        value: "keycloaktest.timo.be"
---
# Allowing traefik to route to nginx pods
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: keycloak
  namespace: keycloak
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`keycloaktest.timo.be`)
      kind: Rule
      services:
        - name: keycloak
          port: 80
      middlewares:
        - name: secureheaders
          namespace: traefik
        - name: ratelimit
          namespace: traefik
  tls:
    secretName: wildcard-timo-be-production-tls